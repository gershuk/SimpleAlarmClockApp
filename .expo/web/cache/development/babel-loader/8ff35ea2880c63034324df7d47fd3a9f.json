{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { Appbar, Button } from 'react-native-paper';\nimport { useHeaderTextColor } from \"../utils\";\nimport { getTranslation } from \"../translations/utils\";\nexport default function DatePickerModalHeader(props) {\n  var _props$uppercase;\n\n  var disableSafeTop = props.disableSafeTop,\n      locale = props.locale;\n  var saveLabel = props.saveLabel || getTranslation(locale, 'save');\n  var color = useHeaderTextColor();\n  return React.createElement(React.Fragment, null, React.createElement(Animated.View, {\n    style: styles.animated\n  }, React.createElement(SafeAreaView, {\n    style: [styles.safeContent, disableSafeTop && styles.safeContentNoTop]\n  }, React.createElement(Appbar, {\n    style: styles.appbarHeader\n  }, React.createElement(Appbar.Action, {\n    icon: \"close\",\n    accessibilityLabel: getTranslation(locale, 'close'),\n    onPress: props.onDismiss,\n    color: color,\n    testID: \"react-native-paper-dates-close\"\n  }), React.createElement(Appbar.Content, {\n    title: ''\n  }), React.createElement(Button, {\n    color: color,\n    onPress: props.onSave,\n    uppercase: (_props$uppercase = props.uppercase) !== null && _props$uppercase !== void 0 ? _props$uppercase : true,\n    testID: \"react-native-paper-dates-save\"\n  }, saveLabel)))));\n}\nvar styles = StyleSheet.create({\n  fill: {\n    flex: 1\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4\n  },\n  safeContent: {\n    paddingBottom: 0\n  },\n  safeContentNoTop: {\n    paddingTop: 0\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12\n  },\n  headerContentContainer: {\n    marginTop: 5,\n    flexDirection: 'row'\n  },\n  label: {\n    color: '#fff',\n    letterSpacing: 1,\n    fontSize: 13\n  },\n  singleHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  rangeHeaderText: {\n    color: '#fff',\n    fontSize: 25\n  },\n  headerTextFilled: {\n    color: 'rgba(255,255,255,1)'\n  },\n  headerTextEmpty: {\n    color: 'rgba(255,255,255,0.5)'\n  },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6\n  },\n  appbarHeader: {\n    elevation: 0,\n    backgroundColor: 'transparent'\n  }\n});","map":{"version":3,"sources":["DatePickerModalHeader.tsx"],"names":["locale","saveLabel","props","getTranslation","color","useHeaderTextColor","styles","animated","disableSafeTop","appbarHeader","fill","flex","paddingBottom","elevation","safeContent","safeContentNoTop","paddingTop","header","height","alignItems","flexDirection","paddingLeft","paddingRight","headerContentContainer","marginTop","label","letterSpacing","fontSize","singleHeaderText","rangeHeaderText","headerTextFilled","headerTextEmpty","headerSeparator","backgroundColor"],"mappings":"AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAEA,SAAA,MAAA,EAAA,MAAA,QAAA,oBAAA;AAEA,SAAA,kBAAA;AACA,SAAA,cAAA;AAWA,eAAe,SAAA,qBAAA,CAAA,KAAA,EAEb;AAAA,MAAA,gBAAA;;AACA,MAAM,cAAN,GAAA,KAAA,CAAM,cAAN;AAAA,MAAwBA,MAAxB,GAAA,KAAA,CAAwBA,MAAxB;AACA,MAAMC,SAAS,GAAGC,KAAK,CAALA,SAAAA,IAAmBC,cAAc,CAAA,MAAA,EAAnD,MAAmD,CAAnD;AACA,MAAMC,KAAK,GAAGC,kBAAd,EAAA;AACA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA;AAAe,IAAA,KAAK,EAAEC,MAAM,CAACC;AAA7B,GAAA,EACE,KAAA,CAAA,aAAA,CAAA,YAAA,EAAA;AACE,IAAA,KAAK,EAAE,CACLD,MAAM,CADD,WAAA,EAELE,cAAc,IAAIF,MAAM,CAFnB,gBAAA;AADT,GAAA,EAME,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAQ,IAAA,KAAK,EAAEA,MAAM,CAACG;AAAtB,GAAA,EACE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,MAAA,EAAA;AACE,IAAA,IAAI,EADN,OAAA;AAEE,IAAA,kBAAkB,EAAEN,cAAc,CAAA,MAAA,EAFpC,OAEoC,CAFpC;AAGE,IAAA,OAAO,EAAED,KAAK,CAHhB,SAAA;AAIE,IAAA,KAAK,EAJP,KAAA;AAKE,IAAA,MAAM,EAAC;AALT,GAAA,CADF,EAQE,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,OAAA,EAAA;AAAgB,IAAA,KAAK,EAAE;AAAvB,GAAA,CARF,EASE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AACE,IAAA,KAAK,EADP,KAAA;AAEE,IAAA,OAAO,EAAEA,KAAK,CAFhB,MAAA;AAGE,IAAA,SAAS,EAAA,CAAA,gBAAA,GAAEA,KAAK,CAAP,SAAA,MAAA,IAAA,IAAA,gBAAA,KAAA,KAAA,CAAA,GAAA,gBAAA,GAHX,IAAA;AAIE,IAAA,MAAM,EAAC;AAJT,GAAA,EAlBV,SAkBU,CATF,CANF,CADF,CADF,CADF;AA+BD;AAED,IAAMI,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BI,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAE;AADF,GADyB;AAI/BJ,EAAAA,QAAQ,EAAE;AACRK,IAAAA,aAAa,EADL,CAAA;AAERC,IAAAA,SAAS,EAAE;AAFH,GAJqB;AAQ/BC,EAAAA,WAAW,EAAE;AACXF,IAAAA,aAAa,EAAE;AADJ,GARkB;AAW/BG,EAAAA,gBAAgB,EAAE;AAChBC,IAAAA,UAAU,EAAE;AADI,GAXa;AAc/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EADA,EAAA;AAENC,IAAAA,UAAU,EAFJ,QAAA;AAGNC,IAAAA,aAAa,EAHP,KAAA;AAINC,IAAAA,WAAW,EAJL,EAAA;AAKNC,IAAAA,YAAY,EAAE;AALR,GAduB;AAqB/BC,EAAAA,sBAAsB,EAAE;AAAEC,IAAAA,SAAS,EAAX,CAAA;AAAgBJ,IAAAA,aAAa,EAAE;AAA/B,GArBO;AAsB/BK,EAAAA,KAAK,EAAE;AAAErB,IAAAA,KAAK,EAAP,MAAA;AAAiBsB,IAAAA,aAAa,EAA9B,CAAA;AAAmCC,IAAAA,QAAQ,EAAE;AAA7C,GAtBwB;AAuB/BC,EAAAA,gBAAgB,EAAE;AAAExB,IAAAA,KAAK,EAAP,MAAA;AAAiBuB,IAAAA,QAAQ,EAAE;AAA3B,GAvBa;AAwB/BE,EAAAA,eAAe,EAAE;AAAEzB,IAAAA,KAAK,EAAP,MAAA;AAAiBuB,IAAAA,QAAQ,EAAE;AAA3B,GAxBc;AAyB/BG,EAAAA,gBAAgB,EAAE;AAAE1B,IAAAA,KAAK,EAAE;AAAT,GAzBa;AA0B/B2B,EAAAA,eAAe,EAAE;AAAE3B,IAAAA,KAAK,EAAE;AAAT,GA1Bc;AA2B/B4B,EAAAA,eAAe,EAAE;AACf5B,IAAAA,KAAK,EADU,qBAAA;AAEfuB,IAAAA,QAAQ,EAFO,EAAA;AAGfN,IAAAA,WAAW,EAHI,CAAA;AAIfC,IAAAA,YAAY,EAAE;AAJC,GA3Bc;AAiC/Bb,EAAAA,YAAY,EAAE;AACZI,IAAAA,SAAS,EADG,CAAA;AAEZoB,IAAAA,eAAe,EAFH;AAAA;AAjCiB,CAAlB,CAAf","sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, SafeAreaView } from 'react-native'\nimport { Appbar, Button } from 'react-native-paper'\n\nimport { useHeaderTextColor } from '../utils'\nimport { getTranslation } from '../translations/utils'\n\nexport interface DatePickerModalHeaderProps {\n  disableSafeTop?: boolean\n  saveLabel?: string\n  uppercase?: boolean\n  onDismiss: () => void\n  onSave: () => void\n  locale: string | undefined\n}\n\nexport default function DatePickerModalHeader(\n  props: DatePickerModalHeaderProps\n) {\n  const { disableSafeTop, locale } = props\n  const saveLabel = props.saveLabel || getTranslation(locale, 'save')\n  const color = useHeaderTextColor()\n  return (\n    <>\n      <Animated.View style={styles.animated}>\n        <SafeAreaView\n          style={[\n            styles.safeContent,\n            disableSafeTop && styles.safeContentNoTop,\n          ]}\n        >\n          <Appbar style={styles.appbarHeader}>\n            <Appbar.Action\n              icon=\"close\"\n              accessibilityLabel={getTranslation(locale, 'close')}\n              onPress={props.onDismiss}\n              color={color}\n              testID=\"react-native-paper-dates-close\"\n            />\n            <Appbar.Content title={''} />\n            <Button\n              color={color}\n              onPress={props.onSave}\n              uppercase={props.uppercase ?? true}\n              testID=\"react-native-paper-dates-save\"\n            >\n              {saveLabel}\n            </Button>\n          </Appbar>\n        </SafeAreaView>\n      </Animated.View>\n    </>\n  )\n}\n\nconst styles = StyleSheet.create({\n  fill: {\n    flex: 1,\n  },\n  animated: {\n    paddingBottom: 0,\n    elevation: 4,\n  },\n  safeContent: {\n    paddingBottom: 0,\n  },\n  safeContentNoTop: {\n    paddingTop: 0,\n  },\n  header: {\n    height: 75,\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingLeft: 24,\n    paddingRight: 12,\n  },\n  headerContentContainer: { marginTop: 5, flexDirection: 'row' },\n  label: { color: '#fff', letterSpacing: 1, fontSize: 13 },\n  singleHeaderText: { color: '#fff', fontSize: 25 },\n  rangeHeaderText: { color: '#fff', fontSize: 25 },\n  headerTextFilled: { color: 'rgba(255,255,255,1)' },\n  headerTextEmpty: { color: 'rgba(255,255,255,0.5)' },\n  headerSeparator: {\n    color: 'rgba(255,255,255,1)',\n    fontSize: 25,\n    paddingLeft: 6,\n    paddingRight: 6,\n  },\n  appbarHeader: {\n    elevation: 0,\n    backgroundColor: 'transparent',\n    // alignItems:'center'\n  },\n})\n"]},"metadata":{},"sourceType":"module"}