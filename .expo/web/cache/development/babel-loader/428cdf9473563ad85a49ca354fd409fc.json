{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { Audio } from 'expo-av';\n\nvar RadioPlayer = function () {\n  function RadioPlayer() {\n    _classCallCheck(this, RadioPlayer);\n  }\n\n  _createClass(RadioPlayer, [{\n    key: \"play\",\n    value: function play(_ref) {\n      var uri;\n      return _regeneratorRuntime.async(function play$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              uri = _ref.uri;\n              bResult = true;\n              _context.prev = 2;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(this._audio.loadAsync({\n                uri: uri\n              }));\n\n            case 5:\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(this._audio.playAsync());\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](2);\n              console.log(\"[RadioPlayer] Loading '\" + uri + \"' has failed with \" + _context.t0);\n              bResult = false;\n\n            case 13:\n              return _context.abrupt(\"return\", bResult);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[2, 9]], Promise);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      return _regeneratorRuntime.async(function stop$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(this._audio.unloadAsync());\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"getStatus\",\n    value: function getStatus() {\n      return _regeneratorRuntime.async(function getStatus$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(this._audio.getStatusAsync());\n\n            case 2:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }], [{\n    key: \"_createInstance\",\n    value: function _createInstance() {\n      var player = new RadioPlayer();\n      player._audio = new Audio.Sound();\n      return player;\n    }\n  }]);\n\n  return RadioPlayer;\n}();\n\nRadioPlayer.instance = RadioPlayer.instance || RadioPlayer._createInstance();\nexport default RadioPlayer;","map":{"version":3,"sources":["C:/Users/vladi/source/repos/SimpleAlarmClockApp/framework/RadioPlayer.js"],"names":["Audio","RadioPlayer","uri","bResult","_audio","loadAsync","playAsync","console","log","unloadAsync","getStatusAsync","player","Sound","instance","_createInstance"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,SAAtB;;IAEMC,W;;;;;;;WASF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAaC,cAAAA,GAAb,QAAaA,GAAb;AACIC,cAAAA,OAAO,GAAG,IAAV;AADJ;AAAA;AAAA,+CAKc,KAAKC,MAAL,CAAYC,SAAZ,CACF;AAAEH,gBAAAA,GAAG,EAAEA;AAAP,eADE,CALd;;AAAA;AAAA;AAAA,+CASc,KAAKE,MAAL,CAAYE,SAAZ,EATd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYQC,cAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BN,GAA5B,GAAkC,oBAAlC,cAAZ;AACAC,cAAAA,OAAO,GAAG,KAAV;;AAbR;AAAA,+CAgBWA,OAhBX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACU,KAAKC,MAAL,CAAYK,WAAZ,EADV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACiB,KAAKL,MAAL,CAAYM,cAAZ,EADjB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WA9BA,2BAAyB;AACrB,UAAMC,MAAM,GAAG,IAAIV,WAAJ,EAAf;AACAU,MAAAA,MAAM,CAACP,MAAP,GAAgB,IAAIJ,KAAK,CAACY,KAAV,EAAhB;AAEA,aAAOD,MAAP;AACH;;;;;;AAPCV,W,CAoCKY,Q,GAAWZ,WAAW,CAACY,QAAZ,IAAwBZ,WAAW,CAACa,eAAZ,E;AAG9C,eAAeb,WAAf","sourcesContent":["import { Audio } from 'expo-av';\n\nclass RadioPlayer {\n\n    static _createInstance() {\n        const player = new RadioPlayer()\n        player._audio = new Audio.Sound();\n\n        return player;\n    }\n\n    async play({ uri }) {\n        bResult = true;\n\n        try {\n\n            await this._audio.loadAsync(\n                { uri: uri },\n            );\n\n            await this._audio.playAsync();\n\n        } catch (e) {\n            console.log(\"[RadioPlayer] Loading '\" + uri + \"' has failed with \" + e);\n            bResult = false;\n        }\n\n        return bResult;\n    }\n\n    async stop() {\n        await this._audio.unloadAsync();\n    }\n\n    async getStatus() {\n        return await this._audio.getStatusAsync();\n    }\n\n    static instance = RadioPlayer.instance || RadioPlayer._createInstance();\n}\n\nexport default RadioPlayer;\n"]},"metadata":{},"sourceType":"module"}