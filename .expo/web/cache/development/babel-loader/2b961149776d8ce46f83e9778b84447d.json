{"ast":null,"code":"import * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useTheme } from 'react-native-paper';\nexport default function AnimatedCrossView(_ref) {\n  var collapsed = _ref.collapsed,\n      calendar = _ref.calendar,\n      calendarEdit = _ref.calendarEdit;\n  var theme = useTheme();\n  var calendarOpacity = React.useRef(new Animated.Value(collapsed ? 1 : 0));\n  React.useEffect(function () {\n    Animated.timing(calendarOpacity.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true\n    }).start();\n  }, [collapsed]);\n  return React.createElement(View, {\n    style: styles.root\n  }, React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'auto' : 'none',\n    style: [styles.calendar, {\n      opacity: calendarOpacity.current,\n      transform: [{\n        scaleY: calendarOpacity.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.85, 1]\n        })\n      }, {\n        scaleX: calendarOpacity.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.95, 1]\n        })\n      }]\n    }]\n  }, calendar), React.createElement(Animated.View, {\n    pointerEvents: collapsed ? 'none' : 'auto',\n    style: [styles.calendarEdit, {\n      backgroundColor: theme.colors.surface,\n      opacity: calendarOpacity.current.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0]\n      }),\n      transform: [{\n        scale: calendarOpacity.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0.95]\n        })\n      }]\n    }]\n  }, calendarEdit));\n}\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1\n  },\n  calendarEdit: {\n    position: 'absolute',\n    left: 0,\n    right: 0\n  },\n  calendar: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["AnimatedCrossView.tsx"],"names":["calendarEdit","theme","useTheme","calendarOpacity","React","Animated","collapsed","toValue","duration","useNativeDriver","styles","root","opacity","transform","scaleY","inputRange","outputRange","scaleX","backgroundColor","scale","flex","position","left","right","calendar"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Animated, StyleSheet, View } from 'react-native'\nimport { useTheme } from 'react-native-paper'\n\nexport default function AnimatedCrossView({\n  // visible,\n  collapsed,\n  calendar,\n  calendarEdit,\n}: {\n  calendar: any\n  calendarEdit: any\n  // visible: boolean\n  collapsed: boolean\n}) {\n  const theme = useTheme()\n  const calendarOpacity = React.useRef<Animated.Value>(\n    new Animated.Value(collapsed ? 1 : 0)\n  )\n  React.useEffect(() => {\n    // if (visible) {\n    Animated.timing(calendarOpacity.current, {\n      toValue: collapsed ? 1 : 0,\n      duration: 250,\n      useNativeDriver: true,\n    }).start()\n    // }\n  }, [collapsed])\n\n  return (\n    <View style={styles.root}>\n      <Animated.View\n        pointerEvents={collapsed ? 'auto' : 'none'}\n        style={[\n          styles.calendar,\n          {\n            opacity: calendarOpacity.current,\n            transform: [\n              {\n                scaleY: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.85, 1],\n                }),\n              },\n              {\n                scaleX: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [0.95, 1],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendar}\n      </Animated.View>\n      <Animated.View\n        pointerEvents={collapsed ? 'none' : 'auto'}\n        style={[\n          styles.calendarEdit,\n          {\n            backgroundColor: theme.colors.surface,\n            opacity: calendarOpacity.current.interpolate({\n              inputRange: [0, 1],\n              outputRange: [1, 0],\n            }),\n            transform: [\n              {\n                scale: calendarOpacity.current.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0.95],\n                }),\n              },\n            ],\n          },\n        ]}\n      >\n        {calendarEdit}\n      </Animated.View>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1 },\n  calendarEdit: {\n    position: 'absolute',\n\n    left: 0,\n    right: 0,\n  },\n  calendar: {\n    flex: 1,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}