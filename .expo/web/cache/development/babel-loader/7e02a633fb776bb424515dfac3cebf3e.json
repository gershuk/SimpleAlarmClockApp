{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, useTheme } from 'react-native-paper';\nimport DayNames, { dayNamesHeight } from \"./DayNames\";\nimport { getTranslation } from \"../translations/utils\";\nvar buttonContainerHeight = 56;\nvar buttonContainerMarginTop = 4;\nvar buttonContainerMarginBottom = 8;\nexport function getCalendarHeaderHeight(scrollMode) {\n  if (scrollMode === 'horizontal') {\n    return buttonContainerHeight + buttonContainerMarginTop + buttonContainerMarginBottom + dayNamesHeight;\n  }\n\n  return dayNamesHeight;\n}\n\nfunction CalendarHeader(_ref) {\n  var scrollMode = _ref.scrollMode,\n      onPrev = _ref.onPrev,\n      onNext = _ref.onNext,\n      disableWeekDays = _ref.disableWeekDays,\n      locale = _ref.locale;\n  var theme = useTheme();\n  var isHorizontal = scrollMode === 'horizontal';\n  return React.createElement(View, {\n    style: styles.datePickerHeader,\n    pointerEvents: 'box-none'\n  }, isHorizontal ? React.createElement(View, {\n    style: styles.buttonContainer,\n    pointerEvents: 'box-none'\n  }, React.createElement(View, {\n    style: styles.spacer,\n    pointerEvents: 'box-none'\n  }), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-left\",\n    accessibilityLabel: getTranslation(locale, 'previous'),\n    onPress: onPrev\n  })), React.createElement(View, {\n    style: [styles.buttonWrapper, {\n      backgroundColor: theme.colors.surface\n    }]\n  }, React.createElement(IconButton, {\n    icon: \"chevron-right\",\n    accessibilityLabel: getTranslation(locale, 'next'),\n    onPress: onNext\n  }))) : null, React.createElement(DayNames, {\n    disableWeekDays: disableWeekDays,\n    locale: locale\n  }));\n}\n\nvar styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  buttonWrapper: {},\n  spacer: {\n    flex: 1\n  }\n});\nexport default React.memo(CalendarHeader);","map":{"version":3,"sources":["CalendarHeader.tsx"],"names":["buttonContainerHeight","buttonContainerMarginTop","buttonContainerMarginBottom","scrollMode","locale","theme","useTheme","isHorizontal","styles","backgroundColor","surface","getTranslation","onPrev","onNext","datePickerHeader","position","top","right","left","zIndex","buttonContainer","height","marginTop","marginBottom","flexDirection","alignItems","buttonWrapper","spacer","flex","React"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { StyleSheet, View } from 'react-native'\nimport { IconButton, useTheme } from 'react-native-paper'\nimport DayNames, { dayNamesHeight } from './DayNames'\nimport type { DisableWeekDaysType } from './dateUtils'\nimport { getTranslation } from '../translations/utils'\n\nconst buttonContainerHeight = 56\nconst buttonContainerMarginTop = 4\nconst buttonContainerMarginBottom = 8\n\nexport function getCalendarHeaderHeight(scrollMode: 'horizontal' | 'vertical') {\n  if (scrollMode === 'horizontal') {\n    return (\n      buttonContainerHeight +\n      buttonContainerMarginTop +\n      buttonContainerMarginBottom +\n      dayNamesHeight\n    )\n  }\n  return dayNamesHeight\n}\n\nfunction CalendarHeader({\n  scrollMode,\n  onPrev,\n  onNext,\n  disableWeekDays,\n  locale,\n}: {\n  locale: undefined | string\n  scrollMode: 'horizontal' | 'vertical'\n  onPrev: () => any\n  onNext: () => any\n  disableWeekDays?: DisableWeekDaysType\n}) {\n  const theme = useTheme()\n  const isHorizontal = scrollMode === 'horizontal'\n  return (\n    <View style={styles.datePickerHeader} pointerEvents={'box-none'}>\n      {isHorizontal ? (\n        <View style={styles.buttonContainer} pointerEvents={'box-none'}>\n          <View style={styles.spacer} pointerEvents={'box-none'} />\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-left\"\n              accessibilityLabel={getTranslation(locale, 'previous')}\n              onPress={onPrev}\n            />\n          </View>\n\n          <View\n            style={[\n              styles.buttonWrapper,\n              { backgroundColor: theme.colors.surface },\n            ]}\n          >\n            <IconButton\n              icon=\"chevron-right\"\n              accessibilityLabel={getTranslation(locale, 'next')}\n              onPress={onNext}\n            />\n          </View>\n        </View>\n      ) : null}\n      <DayNames disableWeekDays={disableWeekDays} locale={locale} />\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  datePickerHeader: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    left: 0,\n    zIndex: 10,\n  },\n  buttonContainer: {\n    height: buttonContainerHeight,\n    marginTop: buttonContainerMarginTop,\n    marginBottom: buttonContainerMarginBottom,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  buttonWrapper: {},\n  spacer: { flex: 1 },\n})\n\nexport default React.memo(CalendarHeader)\n"]},"metadata":{},"sourceType":"module"}