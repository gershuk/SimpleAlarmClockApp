{"ast":null,"code":"import * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper';\nimport { range } from \"../utils\";\nvar ITEM_HEIGHT = 62;\nvar startYear = 1800;\nvar endYear = 2200;\nvar years = range(startYear, endYear);\nexport default function YearPicker(_ref) {\n  var selectedYear = _ref.selectedYear,\n      selectingYear = _ref.selectingYear,\n      onPressYear = _ref.onPressYear;\n  var theme = useTheme();\n  var flatList = React.useRef(null);\n  React.useEffect(function () {\n    if (flatList.current && selectedYear) {\n      var indexToGo = selectedYear - startYear;\n      flatList.current.scrollToOffset({\n        offset: indexToGo / 3 * ITEM_HEIGHT - ITEM_HEIGHT,\n        animated: false\n      });\n    }\n  }, [flatList, selectedYear]);\n  return React.createElement(View, {\n    style: [StyleSheet.absoluteFill, styles.root, {\n      backgroundColor: theme.colors.surface\n    }, selectingYear ? styles.opacity1 : styles.opacity0],\n    pointerEvents: selectingYear ? 'auto' : 'none'\n  }, React.createElement(FlatList, {\n    ref: flatList,\n    style: styles.list,\n    data: years,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Year, {\n        year: item,\n        selected: selectedYear === item,\n        onPressYear: onPressYear\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item;\n    },\n    numColumns: 3\n  }));\n}\n\nfunction YearPure(_ref3) {\n  var year = _ref3.year,\n      selected = _ref3.selected,\n      onPressYear = _ref3.onPressYear;\n  var theme = useTheme();\n  return React.createElement(View, {\n    style: styles.year\n  }, React.createElement(TouchableRipple, {\n    onPress: function onPress() {\n      return onPressYear(year);\n    },\n    accessibilityRole: \"button\",\n    accessibilityLabel: String(year),\n    style: styles.yearButton\n  }, React.createElement(View, {\n    style: [styles.yearInner, selected ? {\n      backgroundColor: theme.colors.primary\n    } : null]\n  }, React.createElement(Text, {\n    style: [styles.yearLabel, selected ? styles.selectedYear : null],\n    selectable: false\n  }, year))));\n}\n\nvar Year = React.memo(YearPure);\nvar styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    top: 56,\n    zIndex: 100\n  },\n  list: {\n    flex: 1\n  },\n  year: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 16,\n    height: ITEM_HEIGHT,\n    justifyContent: 'center'\n  },\n  selectedYear: {\n    color: '#fff'\n  },\n  yearButton: {\n    borderRadius: 46 / 2,\n    overflow: 'hidden'\n  },\n  yearInner: {\n    borderRadius: 46 / 2,\n    height: 46,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  yearLabel: {\n    fontSize: 16\n  },\n  opacity0: {\n    opacity: 0\n  },\n  opacity1: {\n    opacity: 1\n  }\n});","map":{"version":3,"sources":["YearPicker.tsx"],"names":["ITEM_HEIGHT","startYear","endYear","years","range","onPressYear","theme","useTheme","flatList","React","indexToGo","selectedYear","offset","animated","StyleSheet","styles","backgroundColor","surface","selectingYear","item","year","String","yearButton","selected","primary","Year","root","flex","top","zIndex","list","marginLeft","marginRight","height","justifyContent","color","borderRadius","overflow","yearInner","alignItems","yearLabel","fontSize","opacity0","opacity","opacity1"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { FlatList, StyleSheet, View } from 'react-native'\nimport { Text, TouchableRipple, useTheme } from 'react-native-paper'\nimport { range } from '../utils'\n\nconst ITEM_HEIGHT = 62\n\nconst startYear = 1800\nconst endYear = 2200\nconst years = range(startYear, endYear)\n\nexport default function YearPicker({\n  selectedYear,\n  selectingYear,\n  onPressYear,\n}: {\n  selectedYear: number | undefined\n  selectingYear: boolean\n  onPressYear: (year: number) => any\n}) {\n  const theme = useTheme()\n  const flatList = React.useRef<FlatList<number> | null>(null)\n\n  // scroll to selected year\n  React.useEffect(() => {\n    if (flatList.current && selectedYear) {\n      const indexToGo = selectedYear - startYear\n      flatList.current.scrollToOffset({\n        offset: (indexToGo / 3) * ITEM_HEIGHT - ITEM_HEIGHT,\n        animated: false,\n      })\n    }\n  }, [flatList, selectedYear])\n\n  return (\n    <View\n      style={[\n        StyleSheet.absoluteFill,\n        styles.root,\n        { backgroundColor: theme.colors.surface },\n        selectingYear ? styles.opacity1 : styles.opacity0,\n      ]}\n      pointerEvents={selectingYear ? 'auto' : 'none'}\n    >\n      <FlatList<number>\n        ref={flatList}\n        style={styles.list}\n        data={years}\n        renderItem={({ item }) => (\n          <Year\n            year={item}\n            selected={selectedYear === item}\n            onPressYear={onPressYear}\n          />\n        )}\n        keyExtractor={(item) => `${item}`}\n        numColumns={3}\n      />\n    </View>\n  )\n}\n\nfunction YearPure({\n  year,\n  selected,\n  onPressYear,\n}: {\n  year: number\n  selected: boolean\n  onPressYear: (newYear: number) => any\n}) {\n  const theme = useTheme()\n  return (\n    <View style={styles.year}>\n      <TouchableRipple\n        onPress={() => onPressYear(year)}\n        accessibilityRole=\"button\"\n        accessibilityLabel={String(year)}\n        style={styles.yearButton}\n      >\n        <View\n          style={[\n            styles.yearInner,\n            selected ? { backgroundColor: theme.colors.primary } : null,\n          ]}\n        >\n          <Text\n            style={[styles.yearLabel, selected ? styles.selectedYear : null]}\n            selectable={false}\n          >\n            {year}\n          </Text>\n        </View>\n      </TouchableRipple>\n    </View>\n  )\n}\nconst Year = React.memo(YearPure)\n\nconst styles = StyleSheet.create({\n  root: {\n    flex: 1,\n    top: 56,\n    zIndex: 100,\n  },\n\n  list: {\n    flex: 1,\n  },\n  year: {\n    flex: 1,\n    marginLeft: 16,\n    marginRight: 16,\n    height: ITEM_HEIGHT,\n    justifyContent: 'center',\n  },\n  selectedYear: { color: '#fff' },\n  yearButton: {\n    borderRadius: 46 / 2,\n    overflow: 'hidden',\n  },\n  yearInner: {\n    borderRadius: 46 / 2,\n    height: 46,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  yearLabel: {\n    fontSize: 16,\n  },\n  opacity0: {\n    opacity: 0,\n  },\n  opacity1: {\n    opacity: 1,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}