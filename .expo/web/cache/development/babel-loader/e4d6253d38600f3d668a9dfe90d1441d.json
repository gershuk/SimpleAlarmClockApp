{"ast":null,"code":"var translationsPerLocale = {};\nexport function getTranslation(locale, key, fallback) {\n  var l = locale || 'en';\n  var translationForLocale = translationsPerLocale[l];\n\n  if (!translationForLocale) {\n    console.warn(\"[react-native-paper-dates] \" + locale + \" is not registered, key: \" + key);\n    return fallback || key;\n  }\n\n  var translation = translationsPerLocale[l][key];\n\n  if (!translationForLocale) {\n    console.warn(\"[react-native-paper-dates] \" + locale + \" is registered, but \" + key + \" is missing\");\n  }\n\n  return translation || fallback || key;\n}\nexport function registerTranslation(locale, translations) {\n  translationsPerLocale[locale] = translations;\n}","map":{"version":3,"sources":["utils.ts"],"names":["translationsPerLocale","l","locale","translationForLocale","console","fallback","translation"],"mappings":"AAiBA,IAAIA,qBAAuD,GAA3D,EAAA;AAEA,OAAO,SAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,QAAA,EAIL;AACA,MAAMC,CAAC,GAAGC,MAAM,IAAhB,IAAA;AACA,MAAMC,oBAAoB,GAAGH,qBAAqB,CAAlD,CAAkD,CAAlD;;AACA,MAAI,CAAJ,oBAAA,EAA2B;AACzBI,IAAAA,OAAO,CAAPA,IAAAA,iCACgCF,MADhCE,iCAAAA,GAAAA;AAGA,WAAOC,QAAQ,IAAf,GAAA;AACD;;AACD,MAAMC,WAAW,GAAGN,qBAAqB,CAArBA,CAAqB,CAArBA,CAApB,GAAoBA,CAApB;;AACA,MAAI,CAAJ,oBAAA,EAA2B;AACzBI,IAAAA,OAAO,CAAPA,IAAAA,iCACgCF,MADhCE,4BAAAA,GAAAA;AAGD;;AACD,SAAOE,WAAW,IAAXA,QAAAA,IAAP,GAAA;AACD;AAED,OAAO,SAAA,mBAAA,CAAA,MAAA,EAAA,YAAA,EAGL;AACAN,EAAAA,qBAAqB,CAArBA,MAAqB,CAArBA,GAAAA,YAAAA;AACD","sourcesContent":["export type TranslationsType = {\n  selectSingle: string\n  selectMultiple: string\n  selectRange: string\n  save: string\n  notAccordingToDateFormat: (inputFormat: string) => string\n  mustBeHigherThan: (date: string) => string\n  mustBeLowerThan: (date: string) => string\n  mustBeBetween: (startDate: string, endDate: string) => string\n  dateIsDisabled: string\n  previous: string\n  next: string\n  typeInDate: string\n  pickDateFromCalendar: string\n  close: string\n}\n\nlet translationsPerLocale: Record<string, TranslationsType> = {}\n\nexport function getTranslation<K extends keyof TranslationsType>(\n  locale: string | undefined,\n  key: K,\n  fallback?: any\n) {\n  const l = locale || 'en'\n  const translationForLocale = translationsPerLocale[l]\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-paper-dates] ${locale} is not registered, key: ${key}`\n    )\n    return fallback || key\n  }\n  const translation = translationsPerLocale[l][key]\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-paper-dates] ${locale} is registered, but ${key} is missing`\n    )\n  }\n  return translation || fallback || key\n}\n\nexport function registerTranslation(\n  locale: string,\n  translations: TranslationsType\n) {\n  translationsPerLocale[locale] = translations\n}\n"]},"metadata":{},"sourceType":"module"}