{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { IconButton, Headline, Switch } from 'react-native-paper';\nimport Moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AlarmEntry = function (_React$Component) {\n  _inherits(AlarmEntry, _React$Component);\n\n  var _super = _createSuper(AlarmEntry);\n\n  function AlarmEntry() {\n    _classCallCheck(this, AlarmEntry);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(AlarmEntry, [{\n    key: \"_onAlarmRemove\",\n    value: function _onAlarmRemove() {\n      this.props.onAlarmRemove({\n        id: this.props.id\n      });\n    }\n  }, {\n    key: \"_onSwitchAlarmStatus\",\n    value: function _onSwitchAlarmStatus() {\n      if (this.props.alarm.isActive()) {\n        this.props.alarm.deactivate();\n      } else {\n        this.props.alarm.activate();\n      }\n\n      this.props.onAlarmStatusChange({\n        id: this.props.id\n      });\n      this.setState(this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          flexDirection: 'row',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: 100,\n          margin: 10,\n          marginBottom: 0,\n          borderRadius: 20,\n          borderWidth: 2,\n          borderColor: this.props.theme.colors.disabled\n        },\n        children: [_jsxs(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'flex-start',\n            marginLeft: 10\n          },\n          children: [_jsx(IconButton, {\n            icon: \"close\",\n            size: 24,\n            onPress: this._onAlarmRemove.bind(this)\n          }), _jsx(View, {\n            style: {\n              width: 10\n            }\n          }), _jsx(Headline, {\n            style: {\n              fontSize: 32,\n              lineHeight: 38\n            },\n            children: Moment(this.props.alarm.getDate()).format('HH:mm')\n          })]\n        }), _jsx(View, {\n          style: {\n            flex: 1,\n            flexDirection: 'row',\n            alignItems: 'center',\n            justifyContent: 'flex-end'\n          },\n          children: _jsx(Switch, {\n            value: this.props.alarm.isActive(),\n            onValueChange: this._onSwitchAlarmStatus.bind(this),\n            style: {\n              marginRight: 15,\n              transform: [{\n                scaleX: 1.25\n              }, {\n                scaleY: 1.25\n              }]\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return AlarmEntry;\n}(React.Component);\n\nexport default AlarmEntry;","map":{"version":3,"sources":["C:/Users/vladi/source/repos/SimpleAlarmClockApp/components/AlarmEntry.js"],"names":["React","IconButton","Headline","Switch","Moment","AlarmEntry","props","onAlarmRemove","id","alarm","isActive","deactivate","activate","onAlarmStatusChange","setState","flex","flexDirection","alignItems","justifyContent","height","margin","marginBottom","borderRadius","borderWidth","borderColor","theme","colors","disabled","marginLeft","_onAlarmRemove","bind","width","fontSize","lineHeight","getDate","format","_onSwitchAlarmStatus","marginRight","transform","scaleX","scaleY","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { View } from 'react-native';\nimport { IconButton, Headline, Switch } from 'react-native-paper';\n\nimport Moment from 'moment';\n\nclass AlarmEntry extends React.Component {\n\n    _onAlarmRemove() {\n        this.props.onAlarmRemove({ id: this.props.id });\n    }\n\n    _onSwitchAlarmStatus() {\n        if (this.props.alarm.isActive()) {\n            this.props.alarm.deactivate();\n        } else {\n            this.props.alarm.activate();\n        }\n        this.props.onAlarmStatusChange({ id: this.props.id });\n        this.setState(this.props);\n\t}\n\n    render() {\n\t\treturn (\n            <View style={\n                {\n                    flex: 1,\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    height: 100,\n                    margin: 10,\n                    marginBottom: 0,\n                    borderRadius: 20,\n                    borderWidth: 2,\n                    borderColor: this.props.theme.colors.disabled,\n                }\n            }>\n                <View style={\n                    {\n                        flex: 1,\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'flex-start',\n                        marginLeft: 10,\n                    }\n                }>\n                    <IconButton icon=\"close\" size={24} onPress={this._onAlarmRemove.bind(this)} />\n                    <View style={{ width: 10 }} />\n                    <Headline style={\n                        {\n                            fontSize: 32,\n                            lineHeight: 38,\n                        }\n                    }>\n                        {Moment(this.props.alarm.getDate()).format('HH:mm')}\n                    </Headline>\n                </View>\n                <View style={\n                    {\n                        flex: 1,\n                        flexDirection: 'row',\n                        alignItems: 'center',\n                        justifyContent: 'flex-end',\n                    }\n                }>\n                    <Switch\n                        value={this.props.alarm.isActive()}\n                        onValueChange={this._onSwitchAlarmStatus.bind(this)}\n                        style={\n                            {\n                                marginRight: 15,\n                                transform: [{ scaleX: 1.25 }, { scaleY: 1.25 }]\n\t\t\t\t\t\t\t}\n                        }\n                    />\n                </View>\n            </View>\n\t\t);\n\t}\n\n}\n\nexport default AlarmEntry;\n"]},"metadata":{},"sourceType":"module"}