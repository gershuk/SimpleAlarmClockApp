{"ast":null,"code":"import { useLatest } from \"../utils\";\nimport * as React from 'react';\nimport { addMonths, differenceInMonths, getRealIndex, startAtIndex } from \"./dateUtils\";\nexport function useYearChange(onChange, _ref) {\n  var selectedYear = _ref.selectedYear,\n      currentIndexRef = _ref.currentIndexRef;\n  var onChangeRef = useLatest(onChange);\n  React.useEffect(function () {\n    if (selectedYear) {\n      var currentIndex = currentIndexRef.current || 0;\n      var currentDate = addMonths(new Date(), getRealIndex(currentIndex));\n      currentDate.setFullYear(selectedYear);\n      var today = new Date();\n      var months = differenceInMonths(today, currentDate);\n      var newIndex = startAtIndex + months;\n\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex);\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear]);\n}","map":{"version":3,"sources":["SwiperUtils.ts"],"names":["currentIndexRef","onChangeRef","useLatest","React","currentIndex","currentDate","addMonths","getRealIndex","today","months","differenceInMonths","newIndex","startAtIndex"],"mappings":"AACA,SAAA,SAAA;AACA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,SAAA,SAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,YAAA;AAsBA,OAAO,SAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EASL;AAPA,MAAA,YAAA,GAOA,IAPA,CAAA,YAAA;AAAA,MAEEA,eAFF,GAOA,IAPA,CAEEA,eAFF;AAQA,MAAMC,WAAW,GAAGC,SAAS,CAA7B,QAA6B,CAA7B;AACAC,EAAAA,KAAK,CAALA,SAAAA,CAAgB,YAAM;AACpB,QAAA,YAAA,EAAkB;AAChB,UAAMC,YAAY,GAAGJ,eAAe,CAAfA,OAAAA,IAArB,CAAA;AACA,UAAMK,WAAW,GAAGC,SAAS,CAAC,IAAD,IAAC,EAAD,EAAaC,YAAY,CAAtD,YAAsD,CAAzB,CAA7B;AACAF,MAAAA,WAAW,CAAXA,WAAAA,CAAAA,YAAAA;AAEA,UAAMG,KAAK,GAAG,IAAd,IAAc,EAAd;AACA,UAAMC,MAAM,GAAGC,kBAAkB,CAAA,KAAA,EAAjC,WAAiC,CAAjC;AAEA,UAAMC,QAAQ,GAAGC,YAAY,GAA7B,MAAA;;AACA,UAAIR,YAAY,KAAhB,QAAA,EAA+B;AAC7BH,QAAAA,WAAW,CAAXA,OAAAA,CAAAA,QAAAA;AACD;AACF;AAbHE,GAAAA,EAcG,CAAA,eAAA,EAAA,WAAA,EAdHA,YAcG,CAdHA;AAeD","sourcesContent":["import type { MutableRefObject } from 'react'\nimport { useLatest } from '../utils'\nimport * as React from 'react'\nimport {\n  addMonths,\n  differenceInMonths,\n  getRealIndex,\n  startAtIndex,\n} from './dateUtils'\n\nexport type RenderProps = {\n  index: number\n  onNext: () => any\n  onPrev: () => any\n}\n\nexport type SwiperProps = {\n  initialIndex: number\n  scrollMode: 'horizontal' | 'vertical'\n  renderItem: (renderProps: RenderProps) => any\n  renderHeader?: (renderProps: RenderProps) => any\n  renderFooter?: (renderProps: RenderProps) => any\n  selectedYear: number | undefined\n}\n\nexport function useYearChange(\n  onChange: (index: number | undefined) => void,\n  {\n    selectedYear,\n    currentIndexRef,\n  }: {\n    currentIndexRef: MutableRefObject<number>\n    selectedYear: number | undefined\n  }\n) {\n  const onChangeRef = useLatest(onChange)\n  React.useEffect(() => {\n    if (selectedYear) {\n      const currentIndex = currentIndexRef.current || 0\n      const currentDate = addMonths(new Date(), getRealIndex(currentIndex))\n      currentDate.setFullYear(selectedYear)\n\n      const today = new Date()\n      const months = differenceInMonths(today, currentDate)\n\n      const newIndex = startAtIndex + months\n      if (currentIndex !== newIndex) {\n        onChangeRef.current(newIndex)\n      }\n    }\n  }, [currentIndexRef, onChangeRef, selectedYear])\n}\n"]},"metadata":{},"sourceType":"module"}