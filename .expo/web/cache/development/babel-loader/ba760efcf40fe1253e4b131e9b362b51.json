{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { Appbar, Button, Headline, List } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\nimport Moment from 'moment';\nimport Alarm from \"../Lib/Alarm\";\nimport Radio from \"../Lib/Radio\";\nimport AppDefines from \"../defines/AppDefines\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreationScreen = function (_React$Component) {\n  _inherits(CreationScreen, _React$Component);\n\n  var _super = _createSuper(CreationScreen);\n\n  function CreationScreen() {\n    var _this;\n\n    _classCallCheck(this, CreationScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      time: new Date(),\n      radio: null,\n      timeOpen: false,\n      radioListExpanded: false\n    };\n    _this.radioList = [new Radio({\n      title: \"CalmRadio - Vivaldi\",\n      uri: \"http://23.82.11.87:8928/stream\"\n    }), new Radio({\n      title: \"Metal Live Radio\",\n      uri: \"http://51.255.8.139:8738/stream\"\n    }), new Radio({\n      title: \"Hits Of Bollywood\",\n      uri: \"http://198.50.156.92:8255/stream\"\n    })];\n    _this.state.radio = _this.radioList[0];\n    return _this;\n  }\n\n  _createClass(CreationScreen, [{\n    key: \"_onAlarmDeclined\",\n    value: function _onAlarmDeclined() {\n      this.props.navigation.goBack();\n    }\n  }, {\n    key: \"_onAlarmConfirmed\",\n    value: function _onAlarmConfirmed() {\n      this.props.navigation.navigate(\"Home\", {\n        newAlarm: Alarm.ConstructFromDateAndRadio({\n          date: this.state.time,\n          radio: this.state.radio\n        })\n      });\n    }\n  }, {\n    key: \"_onPickTimeRequest\",\n    value: function _onPickTimeRequest() {\n      this.state.timeOpen = true;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"_onPickTimeConfirm\",\n    value: function _onPickTimeConfirm(_ref) {\n      var hours = _ref.hours,\n          minutes = _ref.minutes;\n      this.state.time.setHours(hours);\n      this.state.time.setMinutes(minutes);\n\n      this._onPickTimeDismiss();\n    }\n  }, {\n    key: \"_onPickTimeDismiss\",\n    value: function _onPickTimeDismiss() {\n      this.state.timeOpen = false;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"_onPickRadioExpand\",\n    value: function _onPickRadioExpand() {\n      this.state.radioListExpanded = !this.state.radioListExpanded;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"_onPickRadio\",\n    value: function _onPickRadio(_ref2) {\n      var id = _ref2.id;\n      this.state.radio = this.radioList[id];\n\n      this._onPickRadioExpand();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return _jsxs(View, {\n        style: {\n          flex: 1,\n          backgroundColor: this.props.theme.colors.background\n        },\n        children: [_jsxs(Appbar.Header, {\n          children: [_jsx(Appbar.Action, {\n            icon: \"arrow-left\",\n            onPress: this._onAlarmDeclined.bind(this)\n          }), _jsx(Appbar.Content, {\n            title: AppDefines.text.titleCreateionScreen\n          }), _jsx(Appbar.Action, {\n            icon: \"check\",\n            onPress: this._onAlarmConfirmed.bind(this)\n          })]\n        }), _jsxs(View, {\n          style: {\n            flex: 1,\n            backgroundColor: this.props.theme.colors.background,\n            flexDirection: 'column',\n            alignItems: 'stretch'\n          },\n          children: [_jsx(Button, {\n            mode: \"text\",\n            color: this.props.theme.colors.text,\n            onPress: this._onPickTimeRequest.bind(this),\n            style: {\n              padding: 25,\n              alignSelf: 'stretch'\n            },\n            labelStyle: {\n              fontSize: 72\n            },\n            children: Moment(this.state.time).format('HH:mm')\n          }), _jsx(Headline, {\n            style: {\n              fontSize: 24,\n              lineHeight: 32,\n              marginTop: 20,\n              marginLeft: 20,\n              textAlign: 'left'\n            },\n            children: AppDefines.text.titleRadioChoose\n          }), _jsx(List.Accordion, {\n            title: this.state.radio.title,\n            expanded: this.state.radioListExpanded,\n            onPress: this._onPickRadioExpand.bind(this),\n            children: this.radioList.map(function (radio, i) {\n              return _jsx(List.Item, {\n                title: radio.title,\n                onPress: function onPress() {\n                  _this2._onPickRadio({\n                    id: i\n                  });\n                }\n              }, i);\n            })\n          })]\n        }), _jsx(TimePickerModal, {\n          locale: \"en-US\",\n          visible: this.state.timeOpen,\n          onDismiss: this._onPickTimeDismiss.bind(this),\n          onConfirm: this._onPickTimeConfirm.bind(this),\n          hours: this.state.time.hours,\n          minutes: this.state.time.minutes\n        })]\n      });\n    }\n  }]);\n\n  return CreationScreen;\n}(React.Component);\n\nexport default CreationScreen;","map":{"version":3,"sources":["C:/Users/vladi/source/repos/SimpleAlarmClockApp/screens/CreationScreen.js"],"names":["React","Appbar","Button","Headline","List","TimePickerModal","Moment","Alarm","Radio","AppDefines","CreationScreen","state","time","Date","radio","timeOpen","radioListExpanded","radioList","title","uri","props","navigation","goBack","navigate","newAlarm","ConstructFromDateAndRadio","date","setState","hours","minutes","setHours","setMinutes","_onPickTimeDismiss","id","_onPickRadioExpand","flex","backgroundColor","theme","colors","background","_onAlarmDeclined","bind","text","titleCreateionScreen","_onAlarmConfirmed","flexDirection","alignItems","_onPickTimeRequest","padding","alignSelf","fontSize","format","lineHeight","marginTop","marginLeft","textAlign","titleRadioChoose","map","i","_onPickRadio","_onPickTimeConfirm","Component"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAIA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,IAAnC,QAA+C,oBAA/C;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,KAAP;AACA,OAAOC,KAAP;AACA,OAAOC,UAAP;;;;IAEMC,c;;;;;AAEF,4BAAc;AAAA;;AAAA;;AACV;AADU,UAUdC,KAVc,GAUN;AACJC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,EADF;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,QAAQ,EAAE,KAHN;AAIJC,MAAAA,iBAAiB,EAAE;AAJf,KAVM;AAEV,UAAKC,SAAL,GAAiB,CACb,IAAIT,KAAJ,CAAU;AAAEU,MAAAA,KAAK,EAAE,qBAAT;AAAgCC,MAAAA,GAAG,EAAE;AAArC,KAAV,CADa,EAEb,IAAIX,KAAJ,CAAU;AAAEU,MAAAA,KAAK,EAAE,kBAAT;AAA6BC,MAAAA,GAAG,EAAE;AAAlC,KAAV,CAFa,EAGb,IAAIX,KAAJ,CAAU;AAAEU,MAAAA,KAAK,EAAE,mBAAT;AAA8BC,MAAAA,GAAG,EAAE;AAAnC,KAAV,CAHa,CAAjB;AAKA,UAAKR,KAAL,CAAWG,KAAX,GAAmB,MAAKG,SAAL,CAAe,CAAf,CAAnB;AAPU;AAQb;;;;WASD,4BAAmB;AACf,WAAKG,KAAL,CAAWC,UAAX,CAAsBC,MAAtB;AACH;;;WAED,6BAAoB;AAChB,WAAKF,KAAL,CAAWC,UAAX,CAAsBE,QAAtB,CAA+B,MAA/B,EAAwC;AACpCC,QAAAA,QAAQ,EAAEjB,KAAK,CAACkB,yBAAN,CAAgC;AACtCC,UAAAA,IAAI,EAAE,KAAKf,KAAL,CAAWC,IADqB;AAEtCE,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AAFoB,SAAhC;AAD0B,OAAxC;AAMH;;;WAED,8BAAqB;AACjB,WAAKH,KAAL,CAAWI,QAAX,GAAsB,IAAtB;AACA,WAAKY,QAAL,CAAc,KAAKhB,KAAnB;AACH;;;WAED,kCAAuC;AAAA,UAAlBiB,KAAkB,QAAlBA,KAAkB;AAAA,UAAXC,OAAW,QAAXA,OAAW;AACnC,WAAKlB,KAAL,CAAWC,IAAX,CAAgBkB,QAAhB,CAAyBF,KAAzB;AACA,WAAKjB,KAAL,CAAWC,IAAX,CAAgBmB,UAAhB,CAA2BF,OAA3B;;AACA,WAAKG,kBAAL;AACH;;;WAED,8BAAqB;AACjB,WAAKrB,KAAL,CAAWI,QAAX,GAAsB,KAAtB;AACA,WAAKY,QAAL,CAAc,KAAKhB,KAAnB;AACH;;;WAED,8BAAqB;AACjB,WAAKA,KAAL,CAAWK,iBAAX,GAA+B,CAAC,KAAKL,KAAL,CAAWK,iBAA3C;AACA,WAAKW,QAAL,CAAc,KAAKhB,KAAnB;AACH;;;WAED,6BAAqB;AAAA,UAANsB,EAAM,SAANA,EAAM;AACjB,WAAKtB,KAAL,CAAWG,KAAX,GAAmB,KAAKG,SAAL,CAAegB,EAAf,CAAnB;;AACA,WAAKC,kBAAL;AACH;;;WAED,kBAAS;AAAA;;AACL,aACI,MAAC,IAAD;AAAM,QAAA,KAAK,EACP;AACIC,UAAAA,IAAI,EAAE,CADV;AAEIC,UAAAA,eAAe,EAAE,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBC;AAF7C,SADJ;AAAA,mBAMI,MAAC,MAAD,CAAQ,MAAR;AAAA,qBACI,KAAC,MAAD,CAAQ,MAAR;AAAe,YAAA,IAAI,EAAC,YAApB;AAAiC,YAAA,OAAO,EAAE,KAAKC,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B;AAA1C,YADJ,EAEI,KAAC,MAAD,CAAQ,OAAR;AAAgB,YAAA,KAAK,EAAEhC,UAAU,CAACiC,IAAX,CAAgBC;AAAvC,YAFJ,EAGI,KAAC,MAAD,CAAQ,MAAR;AAAe,YAAA,IAAI,EAAC,OAApB;AAA4B,YAAA,OAAO,EAAE,KAAKC,iBAAL,CAAuBH,IAAvB,CAA4B,IAA5B;AAArC,YAHJ;AAAA,UANJ,EAWI,MAAC,IAAD;AAAM,UAAA,KAAK,EACP;AACIN,YAAAA,IAAI,EAAE,CADV;AAEIC,YAAAA,eAAe,EAAE,KAAKhB,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBC,UAF7C;AAGIM,YAAAA,aAAa,EAAE,QAHnB;AAIIC,YAAAA,UAAU,EAAE;AAJhB,WADJ;AAAA,qBAQI,KAAC,MAAD;AACI,YAAA,IAAI,EAAC,MADT;AAEI,YAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWiB,KAAX,CAAiBC,MAAjB,CAAwBI,IAFnC;AAGI,YAAA,OAAO,EAAE,KAAKK,kBAAL,CAAwBN,IAAxB,CAA6B,IAA7B,CAHb;AAII,YAAA,KAAK,EACD;AACIO,cAAAA,OAAO,EAAE,EADb;AAEIC,cAAAA,SAAS,EAAE;AAFf,aALR;AASM,YAAA,UAAU,EACR;AACIC,cAAAA,QAAQ,EAAE;AADd,aAVR;AAAA,sBAcK5C,MAAM,CAAC,KAAKK,KAAL,CAAWC,IAAZ,CAAN,CAAwBuC,MAAxB,CAA+B,OAA/B;AAdL,YARJ,EAwBI,KAAC,QAAD;AAAU,YAAA,KAAK,EACX;AACID,cAAAA,QAAQ,EAAE,EADd;AAEIE,cAAAA,UAAU,EAAE,EAFhB;AAGIC,cAAAA,SAAS,EAAE,EAHf;AAIIC,cAAAA,UAAU,EAAE,EAJhB;AAKIC,cAAAA,SAAS,EAAE;AALf,aADJ;AAAA,sBASK9C,UAAU,CAACiC,IAAX,CAAgBc;AATrB,YAxBJ,EAmCI,KAAC,IAAD,CAAM,SAAN;AACI,YAAA,KAAK,EAAE,KAAK7C,KAAL,CAAWG,KAAX,CAAiBI,KAD5B;AAEI,YAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWK,iBAFzB;AAGI,YAAA,OAAO,EAAE,KAAKkB,kBAAL,CAAwBO,IAAxB,CAA6B,IAA7B,CAHb;AAAA,sBAKQ,KAAKxB,SAAL,CAAewC,GAAf,CACI,UAAC3C,KAAD,EAAQ4C,CAAR;AAAA,qBACI,KAAC,IAAD,CAAM,IAAN;AAEI,gBAAA,KAAK,EAAE5C,KAAK,CAACI,KAFjB;AAGI,gBAAA,OAAO,EAAE,mBAAM;AACX,kBAAA,MAAI,CAACyC,YAAL,CAAkB;AAAE1B,oBAAAA,EAAE,EAAEyB;AAAN,mBAAlB;AACH;AALL,iBACSA,CADT,CADJ;AAAA,aADJ;AALR,YAnCJ;AAAA,UAXJ,EAiEI,KAAC,eAAD;AACI,UAAA,MAAM,EAAC,OADX;AAEI,UAAA,OAAO,EAAE,KAAK/C,KAAL,CAAWI,QAFxB;AAGI,UAAA,SAAS,EAAE,KAAKiB,kBAAL,CAAwBS,IAAxB,CAA6B,IAA7B,CAHf;AAII,UAAA,SAAS,EAAE,KAAKmB,kBAAL,CAAwBnB,IAAxB,CAA6B,IAA7B,CAJf;AAKI,UAAA,KAAK,EAAE,KAAK9B,KAAL,CAAWC,IAAX,CAAgBgB,KAL3B;AAMI,UAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB;AAN7B,UAjEJ;AAAA,QADJ;AA6EH;;;;EAxIwB7B,KAAK,CAAC6D,S;;AA2InC,eAAenD,cAAf","sourcesContent":["import * as React from 'react';\n\nimport { View } from 'react-native';\n\nimport { Appbar, Button, Headline, List } from 'react-native-paper';\nimport { TimePickerModal } from 'react-native-paper-dates';\n\nimport Moment from 'moment';\n\nimport Alarm from '../Lib/Alarm';\nimport Radio from '../Lib/Radio';\nimport AppDefines from '../defines/AppDefines';\n\nclass CreationScreen extends React.Component {\n\n    constructor() {\n        super();\n        this.radioList = [\n            new Radio({ title: \"CalmRadio - Vivaldi\", uri: \"http://23.82.11.87:8928/stream\" }),\n            new Radio({ title: \"Metal Live Radio\", uri: \"http://51.255.8.139:8738/stream\" }),\n            new Radio({ title: \"Hits Of Bollywood\", uri: \"http://198.50.156.92:8255/stream\" }),\n        ];\n        this.state.radio = this.radioList[0];\n    }\n\n    state = {\n        time: new Date(),\n        radio: null,\n        timeOpen: false,\n        radioListExpanded: false,\n    }\n\n    _onAlarmDeclined() {\n        this.props.navigation.goBack();\n    }\n\n    _onAlarmConfirmed() {\n        this.props.navigation.navigate(\"Home\", ({\n            newAlarm: Alarm.ConstructFromDateAndRadio({\n                date: this.state.time,\n                radio: this.state.radio\n            })\n        }));\n    }\n\n    _onPickTimeRequest() {\n        this.state.timeOpen = true;\n        this.setState(this.state);\n    }\n\n    _onPickTimeConfirm({ hours, minutes }) {\n        this.state.time.setHours(hours);\n        this.state.time.setMinutes(minutes);\n        this._onPickTimeDismiss();\n    }\n\n    _onPickTimeDismiss() {\n        this.state.timeOpen = false;\n        this.setState(this.state);\n    }\n\n    _onPickRadioExpand() {\n        this.state.radioListExpanded = !this.state.radioListExpanded;\n        this.setState(this.state);\n    }\n\n    _onPickRadio({ id }) {\n        this.state.radio = this.radioList[id];\n        this._onPickRadioExpand();\n    }\n\n    render() {\n        return (\n            <View style={\n                {\n                    flex: 1,\n                    backgroundColor: this.props.theme.colors.background,\n                }\n            }>\n                <Appbar.Header>\n                    <Appbar.Action icon=\"arrow-left\" onPress={this._onAlarmDeclined.bind(this)} />\n                    <Appbar.Content title={AppDefines.text.titleCreateionScreen} />\n                    <Appbar.Action icon=\"check\" onPress={this._onAlarmConfirmed.bind(this)} />\n                </Appbar.Header>\n                <View style={\n                    {\n                        flex: 1,\n                        backgroundColor: this.props.theme.colors.background,\n                        flexDirection: 'column',\n                        alignItems: 'stretch',\n                    }\n                }>\n                    <Button\n                        mode=\"text\"\n                        color={this.props.theme.colors.text}\n                        onPress={this._onPickTimeRequest.bind(this)}\n                        style={\n                            {\n                                padding: 25,\n                                alignSelf: 'stretch',\n                            }\n                        } labelStyle={\n                            {\n                                fontSize: 72,\n                            }\n                        }>\n                        {Moment(this.state.time).format('HH:mm')}\n                    </Button>\n                    <Headline style={\n                        {\n                            fontSize: 24,\n                            lineHeight: 32,\n                            marginTop: 20,\n                            marginLeft: 20,\n                            textAlign: 'left',\n                        }\n                    }>\n                        {AppDefines.text.titleRadioChoose}\n                    </Headline>\n                    <List.Accordion\n                        title={this.state.radio.title}\n                        expanded={this.state.radioListExpanded}\n                        onPress={this._onPickRadioExpand.bind(this)}>\n                        {\n                            this.radioList.map(\n                                (radio, i) => (\n                                    <List.Item\n                                        key={i}\n                                        title={radio.title}\n                                        onPress={() => {\n                                            this._onPickRadio({ id: i });\n                                        }} />\n                                )\n                            )\n                        }\n                    </List.Accordion>\n                </View>\n\n                <TimePickerModal\n                    locale=\"en-US\"\n                    visible={this.state.timeOpen}\n                    onDismiss={this._onPickTimeDismiss.bind(this)}\n                    onConfirm={this._onPickTimeConfirm.bind(this)}\n                    hours={this.state.time.hours}\n                    minutes={this.state.time.minutes}\n                />\n\n            </View>\n        );\n    }\n}\n\nexport default CreationScreen;\n\n"]},"metadata":{},"sourceType":"module"}